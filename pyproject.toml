[project]
name = "lol-audio-unpack"
version = "3.4.0"
description = "英雄联盟游戏音频文件解包工具"
authors = [
    { name = "Virace", email = "Virace@aliyun.com" }
]
dependencies = [
    "python-dotenv>=1.0.1",
    "msgpack>=1.1.1",
    "ruamel-yaml>=0.18.14",
    "alive-progress>=3.3.0",
    "league-tools",
]
readme = "README.md"
requires-python = ">= 3.13"

[project.scripts]
"unpack" = "lol_audio_unpack.__main__:main"
"mapping" = "lol_audio_unpack.mapping:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
managed = true
dev-dependencies = [
    "memory-profiler>=0.61.0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/lol_audio_unpack"]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = [
    "E", # pycodestyle Errors
    "W", # pycodestyle Warnings
    "F", # Pyflakes
    "B", # flake8-bugbear
    "PL", # Pylint
    "UP", # pyupgrade
    "I"  # isort
]
ignore = [ "E501", "F401", "PLR0915", "PLR0912" ]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
per-file-ignores = {}

# 排除目录部分保持不变
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
docstring-code-format = true

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.uv.sources]
league-tools = { path = "../league-tools", editable = true }
